<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_breakTriggerScopeInArgument" Type="InOutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1272.6666666666667,4075.333333333334</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="43">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="72">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Excel</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Word</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Triggering the Action according to the File moved to the Folder - &quot;.txt&quot;,&quot;&quot;.xls&quot;,&quot;.pdf&quot;" sap:VirtualizedContainerService.HintSize="1282.6666666666667,4010.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="inputFolderPath" />
      <Variable x:TypeArguments="x:String" Default="folderforfilearrival" Name="fullPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Storing File name in a array " sap:VirtualizedContainerService.HintSize="1240.6666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[inputFolderPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[fullPath]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:TriggerScope DisplayName="Giving the Path to Perform the Trigger " sap:VirtualizedContainerService.HintSize="1240.6666666666667,3816.6666666666665" sap2010:WorkflowViewState.IdRef="TriggerScope_1" SchedulingMode="Sequential">
      <ui:TriggerScope.Action>
        <ActivityAction x:TypeArguments="ui:FileChangeTriggerArgs">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:FileChangeTriggerArgs" Name="args" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Seperating the Files According to the conditions" sap:VirtualizedContainerService.HintSize="1188,3397.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:IfElseIf DisplayName="checking if the file is &quot;.txt&quot; file" sap:VirtualizedContainerService.HintSize="1146,3305.3333333333335" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
              <ui:IfElseIf.ConditionBlocks>
                <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" Condition="[args.FileChangeInfo.FullPath.Contains(&quot;.txt&quot;)]">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Txt file operations" sap:VirtualizedContainerService.HintSize="376,286.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="output_txt" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ReadTextFile File="{x:Null}" Content="[output_txt]" DisplayName="Reading Text File" FileName="[args.FileChangeInfo.FullPath]" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
                        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Displaying text file" sap:VirtualizedContainerService.HintSize="334,74.66666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[output_txt]" />
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                  <ui:IfElseIfBlock BlockType="ElseIf" Condition="[args.FileChangeInfo.FullPath.Contains(&quot;.pdf&quot;)]">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="If file moved is pdf" sap:VirtualizedContainerService.HintSize="476,914" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:String[]" Name="pdfPaths" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Storing file paths to array" sap:VirtualizedContainerService.HintSize="434,61.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[pdfPaths]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[directory.GetFiles(fullPath+"\")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Looping trough the pdf files in the  Folder" sap:VirtualizedContainerService.HintSize="434,658.6666666666666" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[pdfPaths]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Reading content in pdf" sap:VirtualizedContainerService.HintSize="376,534.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Default="outputfolder" Name="extractText" />
                                  <Variable x:TypeArguments="x:String" Default="outputfolder\output.txt" Name="desTxt" />
                                  <Variable x:TypeArguments="s:String[]" Name="pdPAth" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Reading PDF With OCR" FileName="[args.FileChangeInfo.FullPath]" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_1" ImageDpi="150" Range="All" Text="[extractText]">
                                  <ui:ReadPDFWithOCR.OCREngine>
                                    <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                      <ActivityFunc.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                      </ActivityFunc.Argument>
                                      <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR." ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" />
                                    </ActivityFunc>
                                  </ui:ReadPDFWithOCR.OCREngine>
                                </ui:ReadPDFWithOCR>
                                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Displaying Content in text File" sap:VirtualizedContainerService.HintSize="334,74.66666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[extractText]" />
                                <ui:WriteTextFile File="{x:Null}" DisplayName="Writing text file and saving" FileName="[desTxt]" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[extractText]" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                        <ui:Break DisplayName="Break the loop after operation is complete" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                  <ui:IfElseIfBlock BlockType="ElseIf" Condition="[args.FileChangeInfo.FullPath.Contains(&quot;.xls&quot;)]">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1094.6666666666667,1598" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:String[]" Name="xlsPath" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="1052.6666666666667,61.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[xlsPath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[directory.GetFiles(fullPath+"\")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1052.6666666666667,1404.6666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[xlsPath]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Excel operation" sap:VirtualizedContainerService.HintSize="1016,1280.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sd2:DataTable" Name="dtOutputXlsx" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtOutputXlsx]" DisplayName="Read Range Workbook to read excel file" sap:VirtualizedContainerService.HintSize="974,86.66666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Details" WorkbookPath="[args.FileChangeInfo.FullPath]" />
                                <If Condition="[dtOutputXlsx.RowCount&gt;0]" DisplayName="If there is data in file then do action" sap:VirtualizedContainerService.HintSize="974,1062" sap2010:WorkflowViewState.IdRef="If_1">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="552,912.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="sd2:DataTable" Name="outBuildData" />
                                        <Variable x:TypeArguments="x:String" Default="outputfolder\output.xls" Name="outTxt" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="510,820.6666666666666" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[outTxt]">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="476,712" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:BuildDataTable DataTable="[outBuildData]" DisplayName="Creating a empty data table" sap:VirtualizedContainerService.HintSize="434,58.666666666666664" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column1&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Column2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtOutputXlsx]" DisplayName="Iterating trough the rows in the data table" sap:VirtualizedContainerService.HintSize="434,521.3333333333334" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                                <ui:ForEachRow.Body>
                                                  <ActivityAction x:TypeArguments="sd2:DataRow">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sd2:DataRow" Name="CurrentRow" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Transfering content " sap:VirtualizedContainerService.HintSize="376,406.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentRow(0).ToString.Trim,CurrentRow(1).ToString.Trim}]" DataTable="[outBuildData]" DisplayName="Adding content from excel to New Data Table" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[outBuildData]" DisplayName="Write the output to excel" sap:VirtualizedContainerService.HintSize="334,86.66666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1" />
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEachRow.Body>
                                              </ui:ForEachRow>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                      </ui:ExcelApplicationScope>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,166.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box displays no data" sap:VirtualizedContainerService.HintSize="334,74.66666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[&quot;Data not present&quot;]" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                  <ui:IfElseIfBlock BlockType="Else">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_28" />
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc:BindingList>
              </ui:IfElseIf.ConditionBlocks>
            </ui:IfElseIf>
          </Sequence>
        </ActivityAction>
      </ui:TriggerScope.Action>
      <ui:TriggerScope.Triggers>
        <scg:List x:TypeArguments="Activity" Capacity="4">
          <ui:FileChangeTriggerV3 FileNameFilter="{x:Null}" IncludeSubdirectories="{x:Null}" ChangeType="Created" DisplayName="File Path" Enabled="True" sap:VirtualizedContainerService.HintSize="1204,184" sap2010:WorkflowViewState.IdRef="FileChangeTriggerV3_1" NotifyFilters="FileName" Path="[inputFolderPath]" SchedulingMode="Sequential" TriggerId="a5bb8249-2d04-4de5-9440-4a17dba643ad" />
        </scg:List>
      </ui:TriggerScope.Triggers>
    </ui:TriggerScope>
  </Sequence>
</Activity>